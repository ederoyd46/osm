// Code generated by protoc-gen-go.
// source: fileformat.proto
// DO NOT EDIT!

/*
Package fileformat is a generated protocol buffer package.

It is generated from these files:
	fileformat.proto

It has these top-level messages:
	Blob
	BlockHeader
*/
package fileformat

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type Blob struct {
	Raw     []byte `protobuf:"bytes,1,opt,name=raw" json:"raw,omitempty"`
	RawSize *int32 `protobuf:"varint,2,opt,name=raw_size" json:"raw_size,omitempty"`
	// Possible compressed versions of the data.
	ZlibData         []byte `protobuf:"bytes,3,opt,name=zlib_data" json:"zlib_data,omitempty"`
	LzmaData         []byte `protobuf:"bytes,4,opt,name=lzma_data" json:"lzma_data,omitempty"`
	Bzip2Data        []byte `protobuf:"bytes,5,opt,name=bzip2_data" json:"bzip2_data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Blob) Reset()         { *m = Blob{} }
func (m *Blob) String() string { return proto.CompactTextString(m) }
func (*Blob) ProtoMessage()    {}

func (m *Blob) GetRaw() []byte {
	if m != nil {
		return m.Raw
	}
	return nil
}

func (m *Blob) GetRawSize() int32 {
	if m != nil && m.RawSize != nil {
		return *m.RawSize
	}
	return 0
}

func (m *Blob) GetZlibData() []byte {
	if m != nil {
		return m.ZlibData
	}
	return nil
}

func (m *Blob) GetLzmaData() []byte {
	if m != nil {
		return m.LzmaData
	}
	return nil
}

func (m *Blob) GetBzip2Data() []byte {
	if m != nil {
		return m.Bzip2Data
	}
	return nil
}

type BlockHeader struct {
	Type             *string `protobuf:"bytes,1,req,name=type" json:"type,omitempty"`
	Indexdata        []byte  `protobuf:"bytes,2,opt,name=indexdata" json:"indexdata,omitempty"`
	Datasize         *int32  `protobuf:"varint,3,req,name=datasize" json:"datasize,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *BlockHeader) Reset()         { *m = BlockHeader{} }
func (m *BlockHeader) String() string { return proto.CompactTextString(m) }
func (*BlockHeader) ProtoMessage()    {}

func (m *BlockHeader) GetType() string {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ""
}

func (m *BlockHeader) GetIndexdata() []byte {
	if m != nil {
		return m.Indexdata
	}
	return nil
}

func (m *BlockHeader) GetDatasize() int32 {
	if m != nil && m.Datasize != nil {
		return *m.Datasize
	}
	return 0
}
